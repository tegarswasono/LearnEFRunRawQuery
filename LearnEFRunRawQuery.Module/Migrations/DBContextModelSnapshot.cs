// <auto-generated />
using LearnEFRunRawQuery.Module.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LearnEFRunRawQuery.Module.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LearnEFRunRawQuery.Module.EntityFramework.Entities.AdultProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<long>("Stok")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("AdultProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Kaos Pevita",
                            Price = 50000.0,
                            Stok = 51L
                        },
                        new
                        {
                            Id = 2,
                            Name = "Kaos John Wick",
                            Price = 40000.0,
                            Stok = 101L
                        },
                        new
                        {
                            Id = 3,
                            Name = "Kaos Dwyne Johnson",
                            Price = 80000.0,
                            Stok = 151L
                        });
                });

            modelBuilder.Entity("LearnEFRunRawQuery.Module.EntityFramework.Entities.ChildProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<long>("Stok")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("ChildProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Kaos Spiderman",
                            Price = 50000.0,
                            Stok = 5L
                        },
                        new
                        {
                            Id = 2,
                            Name = "Kaos Superman",
                            Price = 40000.0,
                            Stok = 10L
                        },
                        new
                        {
                            Id = 3,
                            Name = "Kaos Iron Man",
                            Price = 80000.0,
                            Stok = 15L
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
